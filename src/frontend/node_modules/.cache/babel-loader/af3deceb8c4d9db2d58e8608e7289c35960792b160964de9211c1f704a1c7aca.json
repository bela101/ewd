{"ast":null,"code":"import { createRouter, createWebHistory } from 'vue-router';\nimport LoginView from '@/components/LoginView.vue';\nimport RegisterView from '@/components/RegisterView.vue';\nimport IndexView from \"@/components/IndexView.vue\";\n\n/* eslint-disable no-unused-vars */\nimport { login, register } from '@/services/auth.service';\nconst routes = [{\n  path: '/login',\n  component: LoginView\n}, {\n  path: '/register',\n  component: RegisterView\n}, {\n  path: '/',\n  component: IndexView,\n  meta: {\n    requiresAuth: true\n  }\n}];\nconst router = createRouter({\n  history: createWebHistory(),\n  routes\n});\nrouter.beforeEach((to, from, next) => {\n  const token = localStorage.getItem('token');\n  if (to.meta.requiresAuth && !token) {\n    // trying to access a protected route without a token → redirect to login\n    return {\n      path: '/login',\n      query: {\n        redirect: to.fullPath\n      }\n    };\n  }\n  if ((to.path === '/login' || to.path === '/register') && token) {\n    // logged in users shouldn't see login/register → redirect home\n    return {\n      path: '/'\n    };\n  }\n});\nexport default router;","map":{"version":3,"names":["createRouter","createWebHistory","LoginView","RegisterView","IndexView","login","register","routes","path","component","meta","requiresAuth","router","history","beforeEach","to","from","next","token","localStorage","getItem","query","redirect","fullPath"],"sources":["/Users/bela/Library/Mobile Documents/com~apple~CloudDocs/bht/ewd/ewd/src/frontend/src/router/index.js"],"sourcesContent":["import { createRouter, createWebHistory } from 'vue-router';\nimport LoginView from '@/components/LoginView.vue';\nimport RegisterView from '@/components/RegisterView.vue';\nimport IndexView from \"@/components/IndexView.vue\";\n\n/* eslint-disable no-unused-vars */\nimport { login, register } from '@/services/auth.service';\n\n\n\nconst routes = [\n    { path: '/login', component: LoginView },\n    { path: '/register', component: RegisterView },\n    { path: '/', component: IndexView, meta: { requiresAuth: true} },\n];\n\nconst router = createRouter({\n    history: createWebHistory(),\n    routes,\n});\n\n\nrouter.beforeEach((to, from, next) => {\n    const token = localStorage.getItem('token');\n\n    if (to.meta.requiresAuth && !token) {\n        // trying to access a protected route without a token → redirect to login\n        return { path: '/login', query: { redirect: to.fullPath } }\n    }\n\n    if ((to.path === '/login' || to.path === '/register') && token) {\n        // logged in users shouldn't see login/register → redirect home\n        return { path: '/' }\n    }\n})\n\nexport default router;"],"mappings":"AAAA,SAASA,YAAY,EAAEC,gBAAgB,QAAQ,YAAY;AAC3D,OAAOC,SAAS,MAAM,4BAA4B;AAClD,OAAOC,YAAY,MAAM,+BAA+B;AACxD,OAAOC,SAAS,MAAM,4BAA4B;;AAElD;AACA,SAASC,KAAK,EAAEC,QAAQ,QAAQ,yBAAyB;AAIzD,MAAMC,MAAM,GAAG,CACX;EAAEC,IAAI,EAAE,QAAQ;EAAEC,SAAS,EAAEP;AAAU,CAAC,EACxC;EAAEM,IAAI,EAAE,WAAW;EAAEC,SAAS,EAAEN;AAAa,CAAC,EAC9C;EAAEK,IAAI,EAAE,GAAG;EAAEC,SAAS,EAAEL,SAAS;EAAEM,IAAI,EAAE;IAAEC,YAAY,EAAE;EAAI;AAAE,CAAC,CACnE;AAED,MAAMC,MAAM,GAAGZ,YAAY,CAAC;EACxBa,OAAO,EAAEZ,gBAAgB,CAAC,CAAC;EAC3BM;AACJ,CAAC,CAAC;AAGFK,MAAM,CAACE,UAAU,CAAC,CAACC,EAAE,EAAEC,IAAI,EAAEC,IAAI,KAAK;EAClC,MAAMC,KAAK,GAAGC,YAAY,CAACC,OAAO,CAAC,OAAO,CAAC;EAE3C,IAAIL,EAAE,CAACL,IAAI,CAACC,YAAY,IAAI,CAACO,KAAK,EAAE;IAChC;IACA,OAAO;MAAEV,IAAI,EAAE,QAAQ;MAAEa,KAAK,EAAE;QAAEC,QAAQ,EAAEP,EAAE,CAACQ;MAAS;IAAE,CAAC;EAC/D;EAEA,IAAI,CAACR,EAAE,CAACP,IAAI,KAAK,QAAQ,IAAIO,EAAE,CAACP,IAAI,KAAK,WAAW,KAAKU,KAAK,EAAE;IAC5D;IACA,OAAO;MAAEV,IAAI,EAAE;IAAI,CAAC;EACxB;AACJ,CAAC,CAAC;AAEF,eAAeI,MAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}